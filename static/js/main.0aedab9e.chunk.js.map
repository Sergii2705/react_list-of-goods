{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","ids","Array","length","fill","map","el","uuidv4","minLengths","i","id","option","App","state","isStarted","selected","isReversed","sortType","NONE","this","goods","minLen","visibleGoods","filter","good","sort","a","b","ALPABET","localeCompare","reverse","getReorderedGoods","className","classNames","type","onClick","setState","LENGTH","name","value","onChange","event","target","index","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKA0BKA,E,0GApBCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAM,IAAIC,MAAcF,EAAgBG,QAC3CC,KAAK,IACLC,KAAI,SAAAC,GAAE,OAAIA,EAAKC,iBACZC,EAAa,IAAIN,MAAMF,EAAgBG,QAC1CC,KAAK,IACLC,KAAI,SAACC,EAAIG,GAAL,MAAY,CAAEC,GAAIJ,EAAKC,cAAUI,OAAQF,EAAI,O,SAE/CV,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA2CE,IAAMa,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,SAAU,EACVC,YAAY,EACZC,SAAUlB,EAASmB,MALvB,4CAQE,WAAU,IAAD,OACP,EAKIC,KAAKN,MAJPC,EADF,EACEA,UACAC,EAFF,EAEEA,SACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,SAEIG,EAnDV,SACEA,EACAC,EACAJ,EACAD,GAGA,IAAMM,EAAe,YAAIF,GAAOG,QAAO,SAAAC,GAAI,OAAIA,EAAKrB,QAAUkB,KAkB9D,OAhBIJ,IAAalB,EAASmB,MACxBI,EAAaG,MAAK,SAACC,EAAGC,GACpB,OAAIV,IAAalB,EAAS6B,QACjBF,EAAEG,cAAcF,GAGlBD,EAAEvB,OAASwB,EAAExB,UAMpBa,GACFM,EAAaQ,UAGRR,EA0BSS,CACZ/B,EACAe,EACAE,EACAD,GAGF,OACE,qBAAKgB,UAAU,UAAf,SACIlB,EAWE,sBAAKkB,UAAU,eAAf,UACE,sBAAKA,UAAU,eAAf,UACE,wBACEA,UAAWC,IACT,oBACA,CAAE,WAAYhB,IAAalB,EAAS6B,UAEtCM,KAAK,SACLC,QAAS,kBAAM,EAAKC,UAClB,SAAAvB,GAAK,MAAK,CACRI,SAAUlB,EAAS6B,QACnBZ,WAAYH,EAAMI,WAAalB,EAAS6B,UACnCZ,OAVX,iCAkBA,wBACEgB,UAAWC,IACT,oBACA,CAAE,WAAYhB,IAAalB,EAASsC,SAEtCH,KAAK,SACLC,QAAS,kBAAM,EAAKC,UAClB,SAAAvB,GAAK,MAAK,CACRI,SAAUlB,EAASsC,OACnBrB,WAAYH,EAAMI,WAAalB,EAASsC,SACnCrB,OAVX,4BAkBA,wBACEgB,UAAWC,IACT,oBACA,CAAE,WAAYjB,IAEhBkB,KAAK,SACLC,QAAS,kBAAM,EAAKC,UAClB,SAAAvB,GAAK,MAAK,CAAEG,YAAaH,EAAMG,gBAPnC,qBAaA,wBACEgB,UAAU,qCACVE,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAC3BrB,SAAU,EACVC,YAAY,EACZC,SAAUlB,EAASmB,QANvB,mBAYA,wBACEc,UAAU,8BACVM,KAAK,YACLC,MAAOxB,EACPyB,SAAU,SAACC,GAAD,OAAW,EAAKL,SACxB,CAAErB,UAAW0B,EAAMC,OAAOH,SAL9B,SAQG/B,EAAWH,KAAI,gBAAGK,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAP,OACd,wBAAQ4B,MAAO5B,EAAf,SACGA,GADyBD,WAOlC,oBAAIsB,UAAU,0BAAd,SACGZ,EAAMf,KAAI,SAACmB,EAAMmB,GAAP,OACT,oBAAIX,UAAU,cAAd,SACGR,GAD8BvB,EAAI0C,YA1F3C,wBACEX,UAAU,6BACVE,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAAEtB,WAAW,KAH5C,yBA1BZ,GAAyB8B,IAAMC,WClE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0aedab9e.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport classNames from 'classnames';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst ids = new Array<string>(goodsFromServer.length)\n  .fill('')\n  .map(el => el + uuidv4());\nconst minLengths = new Array(goodsFromServer.length)\n  .fill('')\n  .map((el, i) => ({ id: el + uuidv4(), option: i + 1 }));\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\n// Use this function in the render method\nfunction getReorderedGoods(\n  goods: string[],\n  minLen: number,\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  // Not to mutate the original array\n  const visibleGoods = [...goods].filter(good => good.length >= minLen);\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((a, b) => {\n      if (sortType === SortType.ALPABET) {\n        return a.localeCompare(b);\n      }\n\n      return a.length - b.length;\n    });\n  }\n\n  // Sort and reverse goods if needed\n  // ...\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isStarted: boolean,\n  selected: number,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStarted: false,\n    selected: 1,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const {\n      isStarted,\n      selected,\n      isReversed,\n      sortType,\n    } = this.state;\n    const goods = getReorderedGoods(\n      goodsFromServer,\n      selected,\n      sortType,\n      isReversed,\n    );\n\n    return (\n      <div className=\"App box\">\n        {!isStarted\n          ? (\n            <button\n              className=\"button is-primary is-large\"\n              type=\"button\"\n              onClick={() => this.setState({ isStarted: true })}\n            >\n              Start\n            </button>\n          )\n          : (\n            <div className=\"App__content\">\n              <div className=\"App__buttons\">\n                <button\n                  className={classNames(\n                    'button is-primary',\n                    { 'is-light': sortType === SortType.ALPABET },\n                  )}\n                  type=\"button\"\n                  onClick={() => this.setState(\n                    state => ({\n                      sortType: SortType.ALPABET,\n                      isReversed: state.sortType === SortType.ALPABET\n                        ? !isReversed\n                        : false,\n                    }),\n                  )}\n                >\n                  Sort alphabetically\n                </button>\n\n                <button\n                  className={classNames(\n                    'button is-primary',\n                    { 'is-light': sortType === SortType.LENGTH },\n                  )}\n                  type=\"button\"\n                  onClick={() => this.setState(\n                    state => ({\n                      sortType: SortType.LENGTH,\n                      isReversed: state.sortType === SortType.LENGTH\n                        ? !isReversed\n                        : false,\n                    }),\n                  )}\n                >\n                  Sort by length\n                </button>\n\n                <button\n                  className={classNames(\n                    'button is-primary',\n                    { 'is-light': isReversed },\n                  )}\n                  type=\"button\"\n                  onClick={() => this.setState(\n                    state => ({ isReversed: !state.isReversed }),\n                  )}\n                >\n                  Reverse\n                </button>\n\n                <button\n                  className=\"button is-danger is-large is-reset\"\n                  type=\"button\"\n                  onClick={() => this.setState({\n                    selected: 1,\n                    isReversed: false,\n                    sortType: SortType.NONE,\n                  })}\n                >\n                  Reset\n                </button>\n\n                <select\n                  className=\"select is-primary is-medium\"\n                  name=\"minLength\"\n                  value={selected}\n                  onChange={(event) => this.setState(\n                    { selected: +event.target.value },\n                  )}\n                >\n                  {minLengths.map(({ id, option }) => (\n                    <option value={option} key={id}>\n                      {option}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <ul className=\"Goods content is-medium\">\n                {goods.map((good, index) => (\n                  <li className=\"Goods__item\" key={ids[index]}>\n                    {good}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}